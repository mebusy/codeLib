
# git branch prompt
parse_git_branch() {
    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}
export -f parse_git_branch > /dev/null

# detect shell env
if [ "bash" = "$0"  ] || [ "-bash" = "$0" ]  ; then
    # echo "It's in" $0 
    # Git branch in prompt.
    export PS1="\u@\h \W\[\033[32m\]\$(parse_git_branch)\[\033[00m\] $ "
else
    # autoload -U colors && colors
    # export PROMPT="%n@ %c%{$fg[cyan]%}$(parse_git_branch)%{$reset_color%} $ "
    setopt PROMPT_SUBST
    export PROMPT='%n@%m %c%{%F{cyan}%}$(parse_git_branch)%{%F{none}%} $ '
fi


# ios Debug
if [ -L "/Applications/Xcode.app" ]
then
    export DEVELOPER_DIR="/Applications/Xcode.app/Contents/Developer"
    alias symbolicatecrash="/Applications/Xcode.app/Contents/SharedFrameworks/DVTFoundation.framework/Versions/A/Resources/symbolicatecrash"
fi 

# python user
export PATH=$PATH:~/Library/Python/2.7/bin/

# java_home, macosx only
export JAVA_HOME=`/usr/libexec/java_home`

# pytotch
function pytorch() {
    docker run --rm -it  --user="$(id -u):$(id -g)" -v "$(pwd)":/workspace --pids-limit 16384 pytorch/pytorch:latest python3 $@
}


