#!bash

alias tma='tmux a -t '

# 2 horizontal panes
myT2() {
    # read arguments to an array
    local args=("$@")
    # if no arguments, use current directory
    if [ ${#args[@]} -eq 0 ]; then
        args=("$PWD")
    fi

    local _mainName=$(basename "$PWD")
    
    local session=""
    for _path in "${args[@]}"; do
        _path=$(realpath "$_path")
        local _name=$(basename "$_path")
        session="${session}${_name}·"
    done
    # remove last character (·)
    session=${session%·}

    # echo $session
    # if session already exists, kill it
    if tmux has-session -t "$session" 2>/dev/null; then
        echo "Session $session already exists"
        # tmux kill-session -t "$session"
        return 1
    fi

    #Create a new detached session
    tmux new-session -d -s $session -n $_mainName

    # for each path in args, convert to absolute path
    local i=0
    for _path in "${args[@]}"; do
        _path=$(realpath "$_path")
        # cd "$_path" || { echo "Failed to change directory to $_path"; return 1; }
        local _name=$(basename "$_path")
        echo $i, $_name, $_path

        local pane_session="$session:$i"
        if [ $i -gt 0 ]; then
            echo "Creating new window for $_name"
            tmux new-window -t "$pane_session" -n "$_name"
        fi
        # Split window into two horizontal panes
        tmux split-window -h -t "$pane_session"
        # cd to _path for all panes
        tmux send-keys -t "${pane_session}.0" "cd '$_path'" C-m
        tmux send-keys -t "${pane_session}.1" "cd '$_path'" C-m

        # select first pane
        tmux select-pane -t "${pane_session}.0"

        i=$((i + 1))
    done

    # Return to first window
    tmux select-window -t "$session:0"
    # Attach to the session
    tmux attach -t $session
}
