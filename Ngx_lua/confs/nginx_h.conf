
#user  nobody;
worker_processes  4;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#错误日志
error_log  /Volumes/WORK/WORK/Ngx_lua/logs/error.log  notice;


#pid        logs/nginx.pid;


events {
    worker_connections  256;  #1024;  mac 下最大256
}


http {
    #允许跨域访问
    add_header Access-Control-Allow-Origin *;

    resolver 8.8.8.8;
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    ################################### nginx lua server #############################################################


    #添加搜索
    lua_package_path '/Volumes/WORK/WORK/Ngx_lua/lua/?.lua;;';
    
    #调试模式，关闭code cache    
    #lua_code_cache off;

    #初始化lua
    init_by_lua_file /Volumes/WORK/WORK/Ngx_lua/lua/_init.lua;


    geo $dollar {
        default "$";
    }
    server {

        listen       8080;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;
    

        location / {
            root   html;
            index  index.html index.htm;
        }

        #初始化数据库, nginx 启动后，必须先 运行这个命令 , 只能在本机运行
        location /initDB {
            allow 127.0.0.1;
            deny all ;

            content_by_lua '
                local m = require("_initDB")
                m.func()
            ';
        }



        location /doae {
            content_by_lua '
                local m = require("_handleReq")
                m.func()
            ';
        }




        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

}
